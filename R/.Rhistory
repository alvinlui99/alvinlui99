View(r)
library(TTR)
library(quantmod)
library(dplyr)
library(keras)
library(tensorflow)
source("util_functions.R")
csv_folder <- 'Binance Data/'
symbol = 'BTCUSDT'
csv_path <- paste0(csv_folder, symbol, '.csv')
OHLCV <- read.csv(csv_path, colClasses = c("index" = "POSIXct"))
OHLCV <- feature_generation(OHLCV)
OHLCV_ind <- OHLCV %>%
select(starts_with("ind_"))
pca <- OHLCV_ind %>%
na.omit() %>%
scale() %>%
prcomp()
input_X <- pca$rotation[, 1:8]
# Reshape input_X for LSTM model (assuming a time series sequence)
# Reshape the data into [samples, time steps, features] for LSTM
input_X <- array(input_X, dim = c(dim(input_X)[1], 1, dim(input_X)[2]))
# Build the LSTM model
model <- keras_model_sequential()
remotes::install_github("rstudio/tensorflow")
install.packages("remotes")
remotes::install_github("rstudio/tensorflow")
reticulate::install_python()
install_keras()
library(TTR)
library(quantmod)
library(dplyr)
library(keras)
library(tensorflow)
source("util_functions.R")
csv_folder <- 'Binance Data/'
symbol = 'BTCUSDT'
csv_path <- paste0(csv_folder, symbol, '.csv')
OHLCV <- read.csv(csv_path, colClasses = c("index" = "POSIXct"))
OHLCV <- feature_generation(OHLCV)
OHLCV_ind <- OHLCV %>%
select(starts_with("ind_"))
pca <- OHLCV_ind %>%
na.omit() %>%
scale() %>%
prcomp()
input_X <- pca$rotation[, 1:8]
# Reshape input_X for LSTM model (assuming a time series sequence)
# Reshape the data into [samples, time steps, features] for LSTM
input_X <- array(input_X, dim = c(dim(input_X)[1], 1, dim(input_X)[2]))
# Build the LSTM model
model <- keras_model_sequential()
tf$constant("Hello TensorFlow!")
tf$constant("Hello TensorFlow!")
